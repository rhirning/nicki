/**
 * This file Copyright (c) 2003-2011 Dr. Ralf Hirning
 * All rights reserved.
 *
 *
 * This file is dual-licensed under both the GNU General
 * Public License and an individual license with Dr. Ralf
 * Hirning.
 *
 * This file is distributed in the hope that it will be
 * useful, but AS-IS and WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE, TITLE, or NONINFRINGEMENT.
 * Redistribution, except as permitted by whichever of the GPL
 * or the individual license, is prohibited.
 *
 * 1. For the GPL license (GPL), you can redistribute and/or
 * modify this file under the terms of the GNU General
 * Public License, Version 3, as published by the Free Software
 * Foundation.  You should have received a copy of the GNU
 * General Public License, Version 3 along with this program;
 * if not, write to the Free Software Foundation, Inc., 51
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * 2. For the individual license, this file and the accompanying
 * materials are made available under the terms of the
 * individual license.
 *
 * Any modifications to this file must keep this entire header
 * intact.
 *
 */
package org.mgnl.nicki.editor.projects.directories;

import org.mgnl.nicki.core.i18n.I18n;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Button.ClickEvent;

@SuppressWarnings("serial")
public class NewDirectory extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Button closeButton;

	@AutoGenerated
	private Button createButton;

	@AutoGenerated
	private TextField directory;

	@AutoGenerated
	private Label headline;

	NewDirectoryHandler newDirectoryHandler;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public NewDirectory(NewDirectoryHandler handler) {
		this.newDirectoryHandler = handler;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		directory.focus();
		applyI18n();
		
		createButton.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				newDirectoryHandler.createNewDirectory((String) directory.getValue());
			}
		});
		
		closeButton.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				newDirectoryHandler.closeNewDirectoryWindow();
			}
		});
	}

	private void applyI18n() {
		headline.setValue(I18n.getText("nicki.editor.project.newdirectory.headline"));
		createButton.setCaption(I18n.getText("nicki.editor.project.newdirectory.button.create"));
		closeButton.setCaption(I18n.getText("nicki.editor.project.newdirectory.button.close"));
	}
		
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// headline
		headline = new Label();
		headline.setWidth("400px");
		headline.setHeight("-1px");
		headline.setValue("Headline");
		headline.setImmediate(false);
		mainLayout.addComponent(headline, "top:20.0px;left:20.0px;");
		
		// directory
		directory = new TextField();
		directory.setWidth("-1px");
		directory.setHeight("-1px");
		directory.setImmediate(false);
		mainLayout.addComponent(directory, "top:60.0px;left:20.0px;");
		
		// createButton
		createButton = new Button();
		createButton.setWidth("-1px");
		createButton.setHeight("-1px");
		createButton.setCaption("Create");
		createButton.setImmediate(true);
		mainLayout.addComponent(createButton, "top:100.0px;left:20.0px;");
		
		// closeButton
		closeButton = new Button();
		closeButton.setWidth("-1px");
		closeButton.setHeight("-1px");
		closeButton.setCaption("Close");
		closeButton.setImmediate(true);
		mainLayout.addComponent(closeButton, "top:100.0px;left:100.0px;");
		
		return mainLayout;
	}

}
