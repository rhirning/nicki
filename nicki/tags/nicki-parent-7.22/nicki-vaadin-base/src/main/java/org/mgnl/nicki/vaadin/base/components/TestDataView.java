/**
 * This file Copyright (c) 2003-2011 Dr. Ralf Hirning
 * All rights reserved.
 *
 *
 * This file is dual-licensed under both the GNU General
 * Public License and an individual license with Dr. Ralf
 * Hirning.
 *
 * This file is distributed in the hope that it will be
 * useful, but AS-IS and WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE, TITLE, or NONINFRINGEMENT.
 * Redistribution, except as permitted by whichever of the GPL
 * or the individual license, is prohibited.
 *
 * 1. For the GPL license (GPL), you can redistribute and/or
 * modify this file under the terms of the GNU General
 * Public License, Version 3, as published by the Free Software
 * Foundation.  You should have received a copy of the GNU
 * General Public License, Version 3 along with this program;
 * if not, write to the Free Software Foundation, Inc., 51
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * 2. For the individual license, this file and the accompanying
 * materials are made available under the terms of the
 * individual license.
 *
 * Any modifications to this file must keep this entire header
 * intact.
 *
 */
package org.mgnl.nicki.vaadin.base.components;


import java.io.Serializable;
import java.util.Map;

import org.mgnl.nicki.core.i18n.I18n;
import org.mgnl.nicki.vaadin.base.listener.TestDataValueChangeListener;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class TestDataView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout verticalLayout;

	@AutoGenerated
	private Button newButton;

	@AutoGenerated
	private VerticalLayout testData;

	public static final String SEPARATOR = "=";

	private Property<Map<String, String>> data;
	private ValueChangeListener listener;
	private EnterNameDialog newFieldWindow;
	private String messageKeyBase;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TestDataView(Property<Map<String, String>> dataContainer, String messageKeyBase) {
		this.data = dataContainer;
		this.messageKeyBase = messageKeyBase + ".testdata";
		buildMainLayout();
		setCompositionRoot(verticalLayout);
		listener = new TestDataValueChangeListener(dataContainer, testData);
		Map<String, String> values = data.getValue();
		for (String name : values.keySet()) {
			addField(name, values.get(name));
		}
		newButton.addClickListener(new Button.ClickListener() {
			
			public void buttonClick(ClickEvent event) {
				addNewField();
			}
		});
	}
	
	private void addField(String name, String value) {
		TextField field = new TextField(name, value);
		field.addValueChangeListener(listener);
		field.setWidth("100%");
		testData.addComponent(field);

	}

	protected void addNewField() {
		EnterNameDialog newFieldWindow = new EnterNameDialog(messageKeyBase,
				I18n.getText(messageKeyBase + ".window.title"));
		newFieldWindow.setHandler(new NewFieldHandler(""));
		newFieldWindow.setPositionX(300);
		newFieldWindow.setPositionY(100);
		newFieldWindow.setWidth(440, Unit.PIXELS);
		newFieldWindow.setHeight(500, Unit.PIXELS);
		newFieldWindow.setModal(true);
		UI.getCurrent().addWindow(newFieldWindow);
	}
	
	public class NewFieldHandler extends EnterNameHandler implements Serializable {

		public NewFieldHandler(String initialName) {
			super(initialName);
		}

		public void setName(String name) {
			addField(name, "");
		}

		public void closeEnterNameDialog() {
			UI.getCurrent().removeWindow(newFieldWindow);
		}

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		setSizeFull();
		// common part: create layout
		verticalLayout = new VerticalLayout();
		verticalLayout.setWidth("100.0%");
		verticalLayout.setHeight("-1px");
		verticalLayout.setImmediate(false);
		verticalLayout.setMargin(false);
		
		// testData
		testData = new VerticalLayout();
		testData.setWidth("100.0%");
		testData.setHeight("-1px");
		testData.setImmediate(false);
		testData.setMargin(false);
		verticalLayout.addComponent(testData);
		
		// newButton
		newButton = new Button();
		newButton.setWidth("-1px");
		newButton.setHeight("-1px");
		newButton.setCaption("Neu");
		newButton.setImmediate(true);
		verticalLayout.addComponent(newButton);
		
		return verticalLayout;
	}

}
