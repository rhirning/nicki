package org.mgnl.nicki.editor.jcr;

import org.mgnl.nicki.editor.jcr.PropertyWrapper.PROPERTY_TYPE;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.NativeSelect;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Button.ClickEvent;

public class PropertyEditor extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button cancelButton;
	@AutoGenerated
	private Button createButton;
	@AutoGenerated
	private TextArea value;
	@AutoGenerated
	private NativeSelect type;
	@AutoGenerated
	private TextField name;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = -3564526809483368959L;
	private PropertyWrapper propertyWrapper;
	private NodeViewer nodeViewer;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param nodeViewer 
	 */
	public PropertyEditor(NodeViewer viewer, PropertyWrapper propertyWrapper) {
		this.nodeViewer = viewer;
		this.propertyWrapper = propertyWrapper;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		addOptions();
		if (propertyWrapper != null) {
			this.name.setValue(propertyWrapper.getName());
			this.type.select(propertyWrapper.getType());
			this.value.setValue(propertyWrapper.getValue());
			this.name.setEnabled(false);
			this.type.setEnabled(false);
		} else {
			this.name.setEnabled(true);
			this.type.setEnabled(true);
		}
		
		this.createButton.addClickListener(new Button.ClickListener() {

			private static final long serialVersionUID = 3655313717691552016L;

			@Override
			public void buttonClick(ClickEvent event) {
				nodeViewer.create((String) name.getValue(), (PROPERTY_TYPE)type.getValue(), (String) value.getValue());
			}
		});

		// TODO add user code here
	}

	private void addOptions() {
		for (PROPERTY_TYPE pType : PROPERTY_TYPE.values()) {
			type.addItem(pType);
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("480px");
		mainLayout.setHeight("360px");
		
		// top-level component properties
		setWidth("480px");
		setHeight("360px");
		
		// name
		name = new TextField();
		name.setCaption("Name");
		name.setImmediate(false);
		name.setWidth("-1px");
		name.setHeight("-1px");
		mainLayout.addComponent(name, "top:20.0px;left:20.0px;");
		
		// type
		type = new NativeSelect();
		type.setCaption("Typ");
		type.setImmediate(false);
		type.setWidth("-1px");
		type.setHeight("-1px");
		mainLayout.addComponent(type, "top:60.0px;left:20.0px;");
		
		// value
		value = new TextArea();
		value.setCaption("Wert");
		value.setImmediate(false);
		value.setWidth("400px");
		value.setHeight("200px");
		mainLayout.addComponent(value, "top:100.0px;left:20.0px;");
		
		// createButton
		createButton = new Button();
		createButton.setCaption("Anlegen");
		createButton.setImmediate(true);
		createButton.setWidth("-1px");
		createButton.setHeight("-1px");
		mainLayout.addComponent(createButton, "top:320.0px;left:20.0px;");
		
		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("Abbrechen");
		cancelButton.setImmediate(true);
		cancelButton.setWidth("-1px");
		cancelButton.setHeight("-1px");
		mainLayout.addComponent(cancelButton, "top:320.0px;left:120.0px;");
		
		return mainLayout;
	}

}
