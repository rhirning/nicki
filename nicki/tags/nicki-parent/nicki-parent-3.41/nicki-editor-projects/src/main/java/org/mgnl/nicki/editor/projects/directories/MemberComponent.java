/**
 * This file Copyright (c) 2003-2011 Dr. Ralf Hirning
 * All rights reserved.
 *
 *
 * This file is dual-licensed under both the GNU General
 * Public License and an individual license with Dr. Ralf
 * Hirning.
 *
 * This file is distributed in the hope that it will be
 * useful, but AS-IS and WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE, TITLE, or NONINFRINGEMENT.
 * Redistribution, except as permitted by whichever of the GPL
 * or the individual license, is prohibited.
 *
 * 1. For the GPL license (GPL), you can redistribute and/or
 * modify this file under the terms of the GNU General
 * Public License, Version 3, as published by the Free Software
 * Foundation.  You should have received a copy of the GNU
 * General Public License, Version 3 along with this program;
 * if not, write to the Free Software Foundation, Inc., 51
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * 2. For the individual license, this file and the accompanying
 * materials are made available under the terms of the
 * individual license.
 *
 * Any modifications to this file must keep this entire header
 * intact.
 *
 */
package org.mgnl.nicki.editor.projects.directories;

import org.mgnl.nicki.core.i18n.I18n;
import org.mgnl.nicki.editor.projects.objects.Directory;
import org.mgnl.nicki.editor.projects.objects.Member;
import org.mgnl.nicki.editor.projects.objects.Member.RIGHT;


import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class MemberComponent extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	private OptionGroup rights;
	@AutoGenerated
	private Label memberLabel;
	private Directory directory;
	private Member member;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MemberComponent(Directory target, Member person) {
		this.member = person;
		this.directory = target;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		memberLabel.setValue(this.member.getDisplayName());

		rights.addItem(Member.RIGHT.NONE);
		rights.setItemCaption(Member.RIGHT.NONE, I18n.getText("nicki.editor.projects.right.none"));
		rights.addItem(Member.RIGHT.READ);
		rights.setItemCaption(Member.RIGHT.READ, I18n.getText("nicki.editor.projects.right.read"));
		rights.addItem(Member.RIGHT.WRITE);
		rights.setItemCaption(Member.RIGHT.WRITE, I18n.getText("nicki.editor.projects.right.write"));
		if (member.hasReadRight(directory)) {
			rights.select(Member.RIGHT.READ);
		} else if (member.hasWriteRight(directory)) {
				rights.select(Member.RIGHT.WRITE);
		} else {
			rights.select(Member.RIGHT.NONE);
		}
		rights.setStyleName("horizontal");
	}

	public void save() {
		member.setRight(directory, (RIGHT) rights.getValue());
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setMargin(false);
		
		// memberLabel
		memberLabel = new Label();
		memberLabel.setWidth("200px");
		memberLabel.setHeight("-1px");
		memberLabel.setValue("Mitglied");
		memberLabel.setImmediate(false);
		horizontalLayout_1.addComponent(memberLabel);
		
		// rights
		rights = new OptionGroup();
		rights.setWidth("-1px");
		rights.setHeight("-1px");
		rights.setImmediate(false);
		horizontalLayout_1.addComponent(rights);

		return horizontalLayout_1;
	}

	public Member getMember() {
		return member;
	}

}
