package org.mgnl.nicki.editor.mailtemplates;

import org.mgnl.nicki.core.i18n.I18n;
import org.mgnl.nicki.dynamic.objects.objects.Template;
import org.mgnl.nicki.ldap.objects.DynamicObject;
import org.mgnl.nicki.mailtemplate.engine.MailTemplateEngine;
import org.mgnl.nicki.vaadin.base.editor.ClassEditor;
import org.mgnl.nicki.vaadin.base.editor.NickiTreeEditor;

import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class I18nMailTemplateViewer extends CustomComponent implements ClassEditor {

	private AbsoluteLayout mainLayout;
	
	private TabSheet tab;
	private Template template;
	private String messageKeyBase;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public I18nMailTemplateViewer(String messageKeyBase) {
		this.messageKeyBase = messageKeyBase;
	}
	
	public void setDynamicObject(NickiTreeEditor nickiEditor, DynamicObject dynamicObject) {
		this.template = (Template) dynamicObject;
		buildEditor();
		setCompositionRoot(mainLayout);
		
		createSheets();
		
	}


	private void createSheets() {
		MailTemplateViewer editor = new MailTemplateViewer(template, this.messageKeyBase);
		int position = 0;
		tab.addTab(editor, I18n.getText(this.messageKeyBase + ".tab.default"), null);
		for (int i = 0; i < MailTemplateEngine.LOCALE_NAMES.length; i++) {
			position++;
			String localeName = MailTemplateEngine.LOCALE_NAMES[i];
			String dn = template.getModel().getNamingLdapAttribute() + "=" + template.getNamingValue() + "_" + localeName
					+ "," + template.getParentPath();
			editor = new MailTemplateViewer(template.getContext(), dn, localeName, this.messageKeyBase);
			tab.addTab(editor, localeName, null);
		}
	}
	
	private AbsoluteLayout buildEditor() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		VerticalLayout verticalLayout = new VerticalLayout();
		verticalLayout.setHeight("100%");
		mainLayout.addComponent(verticalLayout, "top:20.0px;left:20.0px;");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		tab = new TabSheet();
		tab.setWidth("640px");
		tab.setHeight("100.0%");
		tab.setImmediate(false);
		verticalLayout.addComponent(tab);

		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setHeight(40, UNITS_PIXELS);
		verticalLayout.addComponent(horizontalLayout);
		
		return mainLayout;
	}

}
