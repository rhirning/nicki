//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1-b171012.0423 
//         See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
//         Any modifications to this file will be lost upon recompilation of the source schema. 
//         Generated on: 2018.11.13 at 08:19:58 AM GMT 
//


package org.mgnl.nicki.xls.model.template;

/*-
 * #%L
 * nicki-xls
 * %%
 * Copyright (C) 2017 - 2023 Ralf Hirning
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.mgnl.nicki.xls.model.template package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _TableDataText_QNAME = new QName("", "text");
    private final static QName _TableDataLink_QNAME = new QName("", "link");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.mgnl.nicki.xls.model.template
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Document }
     * 
     */
    public Document createDocument() {
        return new Document();
    }

    /**
     * Create an instance of {@link Document.Styles }
     * 
     */
    public Document.Styles createDocumentStyles() {
        return new Document.Styles();
    }

    /**
     * Create an instance of {@link Document.Pages }
     * 
     */
    public Document.Pages createDocumentPages() {
        return new Document.Pages();
    }

    /**
     * Create an instance of {@link Page }
     * 
     */
    public Page createPage() {
        return new Page();
    }

    /**
     * Create an instance of {@link Style }
     * 
     */
    public Style createStyle() {
        return new Style();
    }

    /**
     * Create an instance of {@link Box }
     * 
     */
    public Box createBox() {
        return new Box();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link TableRow }
     * 
     */
    public TableRow createTableRow() {
        return new TableRow();
    }

    /**
     * Create an instance of {@link TableData }
     * 
     */
    public TableData createTableData() {
        return new TableData();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Text }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Text }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "text", scope = TableData.class)
    public JAXBElement<Text> createTableDataText(Text value) {
        return new JAXBElement<Text>(_TableDataText_QNAME, Text.class, TableData.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Link }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Link }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "link", scope = TableData.class)
    public JAXBElement<Link> createTableDataLink(Link value) {
        return new JAXBElement<Link>(_TableDataLink_QNAME, Link.class, TableData.class, value);
    }

}
