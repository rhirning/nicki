/**
 * This file Copyright (c) 2003-2011 Dr. Ralf Hirning
 * Author: Dr. Ralf Hirning
 * All rights reserved.
 *
 * Any modifications to this file must keep this entire header
 * intact.
 *
 */
package org.mgnl.nicki.vaadin.base.components;


import java.io.Serializable;
import java.util.Iterator;
import java.util.Map;

import org.mgnl.nicki.core.i18n.I18n;
import org.mgnl.nicki.vaadin.base.components.EnterNameDialog;
import org.mgnl.nicki.vaadin.base.components.EnterNameHandler;
import org.mgnl.nicki.vaadin.base.listener.TestDataValueChangeListener;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.terminal.Sizeable;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

@SuppressWarnings("serial")
public class TestDataView extends CustomComponent {
	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private VerticalLayout verticalLayout_1;

	@AutoGenerated
	private Button newButton;

	@AutoGenerated
	private VerticalLayout testData;

	public static final String SEPARATOR = "=";

	private Property data;
	private ValueChangeListener listener;
	private Window newFieldWindow;
	private String messageKeyBase;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TestDataView(Property dataContainer, String messageKeyBase) {
		this.data = dataContainer;
		this.messageKeyBase = messageKeyBase + ".testdata";
		buildMainLayout();
		setCompositionRoot(mainLayout);
		listener = new TestDataValueChangeListener(dataContainer, testData, SEPARATOR);
		@SuppressWarnings("unchecked")
		Map<String, String> values = (Map<String, String>) data.getValue();
		for (Iterator<String> iterator = values.keySet().iterator(); iterator.hasNext();) {
			String name = iterator.next();
			addField(name, values.get(name));
		}
		newButton.addListener(new Button.ClickListener() {
			
			public void buttonClick(ClickEvent event) {
				addNewField();
			}
		});
	}
	
	protected void addField(String name, String value) {
		TextField field = new TextField(name, value);
		field.addListener(listener);
		field.setWidth("100%");
		testData.addComponent(field);

	}

	protected void addNewField() {
		newFieldWindow = new Window(I18n.getText(messageKeyBase + ".window.title"),
				new EnterNameDialog(new NewFieldHandler(), messageKeyBase));
		newFieldWindow.setPositionX(300);
		newFieldWindow.setPositionY(100);
		newFieldWindow.setWidth(440, Sizeable.UNITS_PIXELS);
		newFieldWindow.setHeight(500, Sizeable.UNITS_PIXELS);
		newFieldWindow.setModal(true);
		this.getParent().getWindow().addWindow(newFieldWindow);
	}
	
	public class NewFieldHandler extends EnterNameHandler implements Serializable {

		public void setName(String name) {
			addField(name, "");
		}

		public void closeEnterNameDialog() {
			getParent().getWindow().removeWindow(newFieldWindow);
		}

	}


	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setMargin(false);
		
		// testData
		testData = new VerticalLayout();
		testData.setWidth("100.0%");
		testData.setHeight("-1px");
		testData.setImmediate(false);
		testData.setMargin(false);
		verticalLayout_1.addComponent(testData);
		
		// newButton
		newButton = new Button();
		newButton.setWidth("-1px");
		newButton.setHeight("-1px");
		newButton.setCaption("Neu");
		newButton.setImmediate(true);
		verticalLayout_1.addComponent(newButton);
		
		return verticalLayout_1;
	}

}
